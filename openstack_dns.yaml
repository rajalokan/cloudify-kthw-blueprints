tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.4/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin

inputs:
  agent_user:
    description: >
      User for connecting to agent VMs
    default: centos

dsl_definitions:
  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    auth_url: { get_secret: keystone_auth_url }
    user_domain_name: { get_secret: keystone_user_domain_name }
    project_name: { get_secret: keystone_project_name }
    project_domain_name: { get_secret: keystone_project_domain_name }
    region: { get_secret: region }
    # insecure: true


node_templates:

  # update_kthw_subnet:
  #   type: cloudify.openstack.nodes.Subnet
  #   properties:
  #     openstack_config: *openstack_config
  #     use_external_resource: true
  #     resource_id: { concat: [ { get_secret: 'ns_placeholder' }, 'kthw' ] }
  #     subnet:
  #       dns_nameservers: ['']
  #   relationships:
  #     - type: cloudify.relationships.connected_to
  #       target: bootstrap_dns
  #
  # bootstrap_dns:
  #   type: cloudify.nodes.Root
  #   interfaces:
  #     cloudify.interfaces.lifecycle:
  #       configure:
  #         implementation: scripts/01_bootstrap_dns.sh
  #   relationships:
  #     - type: cloudify.relationships.contained_in
  #       target: dns_host

  dns_host:
    type:  cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      resource_id: { concat: [ { get_secret: ns_placeholder }, 'kthw-dns' ] }
      image: { get_secret: centos_core_image }
      flavor: { get_secret: small_image_flavor  }
      agent_config:
        install_method: none
        # user: { get_input: agent_user }
        # network: external
        # install_method: init_script
      server:
        key_name: { get_secret: cloud_key }
    relationships:
      - type: cloudify.openstack.server_connected_to_port
        target: dns_port
      # - type: cloudify.openstack.server_connected_to_security_group
      #   target: dns_security_group
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: dns_floating_ip


  dns_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.connected_to
        target: kthw_network
      - type: cloudify.openstack.port_connected_to_security_group
        target: dns_security_group

  dns_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      resource_id: { concat: [ { get_secret: 'ns_placeholder' }, 'kthw-dns' ] }
      rules:
       # - remote_ip_prefix: 0.0.0.0/0
       #   direction: ingress
       #   protocol: icmp
       - remote_ip_prefix: 0.0.0.0/0
         direction: ingress
         protocol: tcp
         port: 22
       - remote_ip_prefix: 0.0.0.0/0
         direction: ingress
         protocol: tcp
         port: 53
       # - remote_ip_prefix: 0.0.0.0/0
       #   direction: ingress
       #   protocol: udp
       #   port: 53

  dns_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }

  # ////////////////////////////////////////////////////////////////////////////

  kthw_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_attribute: [ infra, deployment, outputs, kthw_network ] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: infra

  infra:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: kthw-infra
          # blueprint_archive: https://github.com/cloudify-examples/openstack-example-network/archive/master.zip
          # main_file_name: simple-blueprint.yaml
          external_resource: true
        deployment:
          id: kthw-infra
          outputs:
            kthw_network: kthw_network
          external_resource: true
        reexecute: false
